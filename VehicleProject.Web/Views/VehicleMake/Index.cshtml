@using PagedList
@using PagedList.Mvc
@model PagedList.IPagedList<VehicleProject.Web.Models.VehicleMakeVM>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Vehicle Make Index";
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<div class="panel panel-primary">
    <div class="panel-heading panel-head">Vehicle Make Index</div>

    <div class="panel-body">
        <a href="@Url.Action("Create")" class="btn btn-success">
            <span class="glyphicon glyphicon-plus"></span>Vehicle Make
        </a>
        <hr />

        <div>
            @using (Html.BeginForm("Index", "VehicleMake", new { sortTerm = ViewBag.currentSort }, FormMethod.Get))
            {
                @Html.Hidden("sortTerm", (string)ViewBag.currentSort);
                <div class="form-group">
                    <div class="col-lg-2">
                    Search: 
                    </div>
                    <div class="col-lg-3">
                    @Html.TextBox("searchTerm", ViewBag.currentSearch as string, new { @class = "form-control" })
                    </div>
                    <div class="col-lg-7">
                    <input type="submit" value="Search" class="btn btn-default" />
                    </div>
                </div>
            }
        </div>

        <table class="table">
            <tr>
                <th>
                    Make Id
                </th>
                <th>
                    Make Name
                    @Html.ActionLink(" ", "Index", new { sortTerm = "ByNameAscending", searchTerm = ViewBag.currentSearch }, new { @class = "glyphicon glyphicon-arrow-down" })
                    @Html.ActionLink(" ", "Index", new { sortTerm = "ByNameDescending", searchTerm = ViewBag.currentSearch }, new { @class = "glyphicon glyphicon-arrow-up" })
                </th>
                <th>
                    Make Abbreviation
                </th>
                <th>
                    Action
                </th>
            </tr>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(ModelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(ModelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(ModelItem => item.Abbr)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Update", new { id = item.Id }, new { @class = "btn btn-success" }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-primary" })
                    </td>
                </tr>
            }
        </table>


    </div>
</div>


<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
new { page, sortTerm = ViewBag.CurrentSort}))